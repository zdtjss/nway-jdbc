<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nway.spring.jdbc.performance.dal.mapper.MonitorMapper">
  <resultMap id="BaseResultMap" type="com.nway.spring.jdbc.performance.dal.po.MonitorPoEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="brand" jdbcType="VARCHAR" property="brand" />
    <result column="max_resolution" jdbcType="VARCHAR" property="maxResolution" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="price" jdbcType="REAL" property="price" />
    <result column="production_date" jdbcType="DATE" property="productionDate" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.nway.spring.jdbc.performance.dal.po.MonitorPoEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    <result column="photo" jdbcType="LONGVARBINARY" property="photo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    id, brand, max_resolution, model, price, production_date, type
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    photo
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.nway.spring.jdbc.performance.dal.po.MonitorPoQuery" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_monitor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.nway.spring.jdbc.performance.dal.po.MonitorPoQuery" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_monitor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_monitor
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    delete from t_monitor
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nway.spring.jdbc.performance.dal.po.MonitorPoQuery">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    delete from t_monitor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nway.spring.jdbc.performance.dal.po.MonitorPoEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into t_monitor (id, brand, max_resolution, 
      model, price, production_date, 
      type, photo)
    values (#{id,jdbcType=INTEGER}, #{brand,jdbcType=VARCHAR}, #{maxResolution,jdbcType=VARCHAR}, 
      #{model,jdbcType=VARCHAR}, #{price,jdbcType=REAL}, #{productionDate,jdbcType=DATE}, 
      #{type,jdbcType=INTEGER}, #{photo,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.nway.spring.jdbc.performance.dal.po.MonitorPoEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into t_monitor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="brand != null">
        brand,
      </if>
      <if test="maxResolution != null">
        max_resolution,
      </if>
      <if test="model != null">
        model,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="productionDate != null">
        production_date,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="photo != null">
        photo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="brand != null">
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="maxResolution != null">
        #{maxResolution,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
      <if test="productionDate != null">
        #{productionDate,jdbcType=DATE},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nway.spring.jdbc.performance.dal.po.MonitorPoQuery" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select count(*) from t_monitor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update t_monitor
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.brand != null">
        brand = #{record.brand,jdbcType=VARCHAR},
      </if>
      <if test="record.maxResolution != null">
        max_resolution = #{record.maxResolution,jdbcType=VARCHAR},
      </if>
      <if test="record.model != null">
        model = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.productionDate != null">
        production_date = #{record.productionDate,jdbcType=DATE},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.photo != null">
        photo = #{record.photo,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update t_monitor
    set id = #{record.id,jdbcType=INTEGER},
      brand = #{record.brand,jdbcType=VARCHAR},
      max_resolution = #{record.maxResolution,jdbcType=VARCHAR},
      model = #{record.model,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=REAL},
      production_date = #{record.productionDate,jdbcType=DATE},
      type = #{record.type,jdbcType=INTEGER},
      photo = #{record.photo,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update t_monitor
    set id = #{record.id,jdbcType=INTEGER},
      brand = #{record.brand,jdbcType=VARCHAR},
      max_resolution = #{record.maxResolution,jdbcType=VARCHAR},
      model = #{record.model,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=REAL},
      production_date = #{record.productionDate,jdbcType=DATE},
      type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nway.spring.jdbc.performance.dal.po.MonitorPoEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update t_monitor
    <set>
      <if test="brand != null">
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="maxResolution != null">
        max_resolution = #{maxResolution,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
      <if test="productionDate != null">
        production_date = #{productionDate,jdbcType=DATE},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.nway.spring.jdbc.performance.dal.po.MonitorPoEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update t_monitor
    set brand = #{brand,jdbcType=VARCHAR},
      max_resolution = #{maxResolution,jdbcType=VARCHAR},
      model = #{model,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      production_date = #{productionDate,jdbcType=DATE},
      type = #{type,jdbcType=INTEGER},
      photo = #{photo,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nway.spring.jdbc.performance.dal.po.MonitorPoEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update t_monitor
    set brand = #{brand,jdbcType=VARCHAR},
      max_resolution = #{maxResolution,jdbcType=VARCHAR},
      model = #{model,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      production_date = #{productionDate,jdbcType=DATE},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into t_monitor
    (id, brand, max_resolution, model, price, production_date, type, photo)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.brand,jdbcType=VARCHAR}, #{item.maxResolution,jdbcType=VARCHAR}, 
        #{item.model,jdbcType=VARCHAR}, #{item.price,jdbcType=REAL}, #{item.productionDate,jdbcType=DATE}, 
        #{item.type,jdbcType=INTEGER}, #{item.photo,jdbcType=LONGVARBINARY})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        insert into t_monitor (
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
        )
        values
        <foreach collection="list" item="item" separator=",">
          (
          <foreach collection="selective" item="column" separator=",">
            <if test="'id'.toString() == column.value">
              #{item.id,jdbcType=INTEGER}
            </if>
            <if test="'brand'.toString() == column.value">
              #{item.brand,jdbcType=VARCHAR}
            </if>
            <if test="'max_resolution'.toString() == column.value">
              #{item.maxResolution,jdbcType=VARCHAR}
            </if>
            <if test="'model'.toString() == column.value">
              #{item.model,jdbcType=VARCHAR}
            </if>
            <if test="'price'.toString() == column.value">
              #{item.price,jdbcType=REAL}
            </if>
            <if test="'production_date'.toString() == column.value">
              #{item.productionDate,jdbcType=DATE}
            </if>
            <if test="'type'.toString() == column.value">
              #{item.type,jdbcType=INTEGER}
            </if>
            <if test="'photo'.toString() == column.value">
              #{item.photo,jdbcType=LONGVARBINARY}
            </if>
          </foreach>
          )
        </foreach>
      </when>
      <otherwise>
        <foreach collection="list" item="item" separator=";">
          insert into t_monitor
          <trim>
            <trim prefix="(" suffix=")" suffixOverrides=",">
              <if test="item.id != null">
                id,
              </if>
              <if test="item.brand != null">
                brand,
              </if>
              <if test="item.maxResolution != null">
                max_resolution,
              </if>
              <if test="item.model != null">
                model,
              </if>
              <if test="item.price != null">
                price,
              </if>
              <if test="item.productionDate != null">
                production_date,
              </if>
              <if test="item.type != null">
                type,
              </if>
              <if test="item.photo != null">
                photo,
              </if>
            </trim>
          </trim>
          values
          <trim>
            <trim prefix="(" suffix=")" suffixOverrides=",">
              <if test="item.id != null">
                #{item.id,jdbcType=INTEGER},
              </if>
              <if test="item.brand != null">
                #{item.brand,jdbcType=VARCHAR},
              </if>
              <if test="item.maxResolution != null">
                #{item.maxResolution,jdbcType=VARCHAR},
              </if>
              <if test="item.model != null">
                #{item.model,jdbcType=VARCHAR},
              </if>
              <if test="item.price != null">
                #{item.price,jdbcType=REAL},
              </if>
              <if test="item.productionDate != null">
                #{item.productionDate,jdbcType=DATE},
              </if>
              <if test="item.type != null">
                #{item.type,jdbcType=INTEGER},
              </if>
              <if test="item.photo != null">
                #{item.photo,jdbcType=LONGVARBINARY},
              </if>
            </trim>
          </trim>
        </foreach>
      </otherwise>
    </choose>
  </insert>
  <insert id="upsertSelective" parameterType="com.nway.spring.jdbc.performance.dal.po.MonitorPoEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into t_monitor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="brand != null">
        brand,
      </if>
      <if test="maxResolution != null">
        max_resolution,
      </if>
      <if test="model != null">
        model,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="productionDate != null">
        production_date,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="photo != null">
        photo,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="brand != null">
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="maxResolution != null">
        #{maxResolution,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
      <if test="productionDate != null">
        #{productionDate,jdbcType=DATE},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=LONGVARBINARY},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="brand != null">
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="maxResolution != null">
        max_resolution = #{maxResolution,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
      <if test="productionDate != null">
        production_date = #{productionDate,jdbcType=DATE},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <insert id="upsert" parameterType="com.nway.spring.jdbc.performance.dal.po.MonitorPoEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into t_monitor
    (id, brand, max_resolution, model, price, production_date, type)
    values
    (#{id,jdbcType=INTEGER}, #{brand,jdbcType=VARCHAR}, #{maxResolution,jdbcType=VARCHAR}, 
      #{model,jdbcType=VARCHAR}, #{price,jdbcType=REAL}, #{productionDate,jdbcType=DATE}, 
      #{type,jdbcType=INTEGER})
    on duplicate key update 
    id = #{id,jdbcType=INTEGER}, 
    brand = #{brand,jdbcType=VARCHAR}, 
    max_resolution = #{maxResolution,jdbcType=VARCHAR}, 
    model = #{model,jdbcType=VARCHAR}, 
    price = #{price,jdbcType=REAL}, 
    production_date = #{productionDate,jdbcType=DATE}, 
    type = #{type,jdbcType=INTEGER}
  </insert>
  <insert id="upsertWithBLOBs" parameterType="com.nway.spring.jdbc.performance.dal.po.MonitorPoEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into t_monitor
    (id, brand, max_resolution, model, price, production_date, type, photo)
    values
    (#{id,jdbcType=INTEGER}, #{brand,jdbcType=VARCHAR}, #{maxResolution,jdbcType=VARCHAR}, 
      #{model,jdbcType=VARCHAR}, #{price,jdbcType=REAL}, #{productionDate,jdbcType=DATE}, 
      #{type,jdbcType=INTEGER}, #{photo,jdbcType=LONGVARBINARY})
    on duplicate key update 
    id = #{id,jdbcType=INTEGER}, 
    brand = #{brand,jdbcType=VARCHAR}, 
    max_resolution = #{maxResolution,jdbcType=VARCHAR}, 
    model = #{model,jdbcType=VARCHAR}, 
    price = #{price,jdbcType=REAL}, 
    production_date = #{productionDate,jdbcType=DATE}, 
    type = #{type,jdbcType=INTEGER}, 
    photo = #{photo,jdbcType=LONGVARBINARY}
  </insert>
</mapper>